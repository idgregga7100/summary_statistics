#/home/isabelle/summary_stats/phenomexcan_files/scripts/search_phenomexcan_pvalues_by_gene_best.R

library(dplyr)
library(tidyr)

pvalues<-read.table("/home/isabelle/summary_stats/phenomexcan_files/smultixcan-mashr-pvalues.tsv.gz",header=TRUE,sep="\t",stringsAsFactors=FALSE)
#adding stringsAsFactors should allow it to sort correctly with the gene name in the column even tho it doesn't help lmaooo
pvalues<-pvalues%>%filter_at(vars(!starts_with("gene_name")), any_vars(. < 0.05))
#removes all genes that don't have significant associations

goi<-readLines("/home/isabelle/summary_stats/wojcik/sig_genes_all_pheno_names.txt")
#can probably be any file type? as long as each line containts one gene name, format ENSGXXXXXXXXXXX
genes<-pvalues%>%filter(gene_name%in%goi)
#column 1 is gene_names, all following column names are traits; need to individually sort and filter each gene (row) of interest

genenames<-genes[1]
#saves the gene_name column to create a key
genes<-genes[2:ncol(genes)]
#cuts out gene name column so the only thing left to sort is the pvalues, no strings left in the data

result<-data.frame(matrix(nrow=(ncol(genes))))
gene<-data.frame()
for (row in 1:nrow(genes)) {
  gene<-genes%>%slice(row)%>%gather(key="trait",value="pvalue")%>%arrange(pvalue)
 result<-cbind(result,gene)
}
result<-result[2:ncol(result)]
#gets rid of first blank column

#this part creates the gene name key
label<-data.frame(matrix(nrow=(ncol(genenames))))
name<-data.frame()
for (row in 1:nrow(genenames)) {
  name<-genenames%>%slice(row)%>%gather(key="trait",value="pvalue")
  label<-cbind(label,name)
}
label<-label[2:ncol(label)]
#gets rid of first blank column

result<-rbind(label,result)

write.table(result,file="sig_genes_all_pheno_phenomexcan_pvalues.txt",quote=FALSE,col.names=TRUE)
